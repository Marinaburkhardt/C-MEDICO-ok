@model Turnos.Models.paciente

@{
    Layout = null;
}
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/Content/estilos.css">
</head>
<body>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="container">
            <div class="Titulo">Alta de Paciente</div>

            <div class="form-group row">
                <div class="col-12 col-md-6 mb-3">
                    Nombre*
                    <!-- Campo obligatorio, solo letras, max 30 caracteres con mensaje de error -->
                    @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control", type="text", placeholder = "Nombre", required = "required", pattern = "[A-Za-z]{2,30}", title = "Ingrese solo letras, entre 2 y 30 caracteres" } })
                    @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                </div>
                <div class="col-12 col-md-6 mb-3">
                    Apellido*
                    <!-- Campo obligatorio, solo letras, max 30 caracteres con mensaje de error -->
                    @Html.EditorFor(model => model.apellido, new { htmlAttributes = new { @class = "form-control", placeholder = "Apellido", required = "required", name = "apellido", id = "apellido", pattern = "[A-Za-z]{2,30}", title = "Ingrese solo letras, entre 2 y 30 caracteres" } })
                    @Html.ValidationMessageFor(model => model.apellido, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                <div class="col-12 col-md-6 mb-3">
                    DNI*
                    <!-- Campo obligatorio, solo numeros, entre 7 y 8 caracteres con mensaje de error -->
                    @Html.EditorFor(model => model.dni, new { htmlAttributes = new { @class = "form-control", placeholder = "DNI", name = "dni", required = "required", id = "dni", minlenght = "7", maxlenght = "8", pattern = "[0-9]", title = "Ingrese un DNI válido" } })
                    @Html.ValidationMessageFor(model => model.dni, "", new { @class = "text-danger" })
                </div>
                <div class="col-12 col-md-6 mb-3">
                    Telefono
                    <!-- No es campo obligatorio, la base acepta nulls -->
                    @Html.EditorFor(model => model.telefono, new { htmlAttributes = new { @class = "form-control", placeholder = "Teléfono", name = "telefono", id = "telefono", pattern = "[0-9]{6,14}", title = "Ingrese solo números" } })
                    @Html.ValidationMessageFor(model => model.telefono, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                <div class="col-12 col-md-6 mb-3">
                    E-Mail*
                    <!-- Campo obligatorio, se aceptan numeros y letras, max 40 caracteres -->
                    @Html.EditorFor(model => model.mail, new { htmlAttributes = new { @class = "form-control", type="email", placeholder = "Email", name = "email", id = "email", maxlength = "40", required = "required", title = "Ingrese un mail válido" } })
                    @Html.ValidationMessageFor(model => model.mail, "", new { @class = "text-danger" })
                </div>
                <div class="col-12 col-md-6 mb-3">
                    Obra Social*
                    <!-- Cambiar los values a los id que corresponde para que pueda persistir en la DB -->
                    @Html.DropDownList("idObraSocial", null, htmlAttributes: new { @class = "form-control", required = "required" })
                    @Html.ValidationMessageFor(model => model.idObraSocial, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                <div class="col-12 col-md-3 mb-3">
                <label>Sexo*</label>
                <!-- Campo obligatorio -->
                @*@Html.EditorFor(model =>model.Gender)*@
                @Html.RadioButtonFor(model => model.sexo, "Hombre", true) Hombre
                @Html.RadioButtonFor(model => model.sexo, "Mujer", false) Mujer
                @Html.ValidationMessageFor(model => model.sexo)<br />
                </div>

            </div>

            <div class="form-group row">
                <div class="col-12 text-center">
                    <div class="row justify-content-center">
                        <div class="col-12 col-sm-9 col-md-4">
                            <button class="btn btn-primary btn-block" type="submit">Dar de alta paciente</button>
                        </div>
                        <div class="col-12 col-sm-9 col-md-2">
                            <input class="btn btn-grey btn-block" type="button" name="cancel" value="Cancel" onClick="window.location='/pacientes';" />
                        </div>
                    </div>
                </div>
            </div>

        </div>

    }

    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js"></script>
    <!-- <script src="../js/bootstrap.min.js"></script> -->

</body>
</html>
