@model Turnos.Models.paciente

@{
    Layout = null;
}
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css">
    <link rel="stylesheet" href="css/estilos.css">
</head>
<body>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
    <div class="container">
        <div class="Titulo">Alta de Paciente</div>

        <div class="form-group row">
            <div class="col-12 col-md-6 mb-3">
                @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                <!-- Campo obligatorio, solo letras, max 30 caracteres con mensaje de error -->
                @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control", placeholder = "Nombre", required = "required", pattern = @"[A-Za-z]{2,30}", title = "Ingrese solo letras, entre 2 y 30 caracteres" } })
                @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
            </div>
            <div class="col-12 col-md-6 mb-3">
                @Html.LabelFor(model => model.apellido, htmlAttributes: new { @class = "control-label col-md-2" })
                <!-- Campo obligatorio, solo letras, max 30 caracteres con mensaje de error -->
                @Html.EditorFor(model => model.apellido, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.apellido, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <div class="col-12 col-md-6 mb-3">
                @Html.LabelFor(model => model.apellido, htmlAttributes: new { @class = "control-label col-md-2" })
                <!-- Campo obligatorio, solo numeros, entre 7 y 8 caracteres con mensaje de error -->
                @Html.EditorFor(model => model.apellido, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.apellido, "", new { @class = "text-danger" })
            </div>
            <div class="col-12 col-md-6 mb-3">
                @Html.LabelFor(model => model.dni, htmlAttributes: new { @class = "control-label col-md-2" })
                <!-- No es campo obligatorio, la base acepta nulls -->
                @Html.EditorFor(model => model.dni, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dni, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <div class="col-12 col-md-6 mb-3">
                @Html.LabelFor(model => model.mail, htmlAttributes: new { @class = "control-label col-md-2" })
                <!-- Campo obligatorio, se aceptan numeros y letras, max 40 caracteres -->
                @Html.EditorFor(model => model.mail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.mail, "", new { @class = "text-danger" })
            </div>
            <div class="col-12 col-md-6 mb-3">
                @Html.LabelFor(model => model.idObraSocial, "Obra Social", htmlAttributes: new { @class = "control-label col-md-2" })
                <!-- Cambiar los values a los id que corresponde para que pueda persistir en la DB -->
                @Html.DropDownList("idObraSocial", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idObraSocial, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <div class="col-12 col-md-3 mb-3">
                
                
                <divclass ="editor-label">
                    <label>Sexo*</label>
                    <!-- Campo obligatorio -->
                </div>
            <divclass ="editor-field">
                @*@Html.EditorFor(model =>model.Gender)*@
                @Html.RadioButtonFor(model => model.sexo, "Hombre", true) Hombre
                @Html.RadioButtonFor(model => model.sexo, "Mujer", false) Mujer
                @Html.ValidationMessageFor(model => model.sexo)<br />
            </divclass>
             
        </div>

        <div class="form-group row">
            <div class="col-12 text-center">
                <div class="row justify-content-center">
                    <div class="col-12 col-sm-9 col-md-4">
                        <button class="btn btn-primary btn-block" type="submit">Dar de alta paciente</button>
                    </div>
                    <div class="col-12 col-sm-9 col-md-2">
                        <button class="btn btn-danger btn-block" type="submit">Cancelar</button>
                    </div>
                </div>
            </div>
        </div>

    </div>

    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js"></script>
    <!-- <script src="../js/bootstrap.min.js"></script> -->
</body>
</html>
